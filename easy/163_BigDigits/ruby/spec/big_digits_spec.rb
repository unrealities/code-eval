require_relative 'spec_helper'

RSpec.describe ParseInput do
  let(:parse_input) { ParseInput.new('a b c d') }

end

RSpec.describe BigDigits do
  before do
    $stdout = StringIO.new
  end

  after(:all) do
    $stdout = STDOUT
  end

  # >***----*---*-----*--****--**--***---**--
  # >---*--**--*--*--**--*----*--*----*-*----
  # >-**----*--****---*--***---***--**--***--
  # >---*---*-----*---*-----*----*-*----*--*-
  # >***---***----*--***-***---**--****--**--
  # >----------------------------------------
  # 
  # >--*---*-----*---*---***----*--***--****--**--
  # >-**--*--*--**--*--*----*--**-----*-*----*----
  # >--*--****---*--****--**----*---**--***--***--
  # >--*-----*---*-----*-*------*-----*----*-*--*-
  # >-***----*--***----*-****--***-***--***---**--
  # >---------------------------------------------
  # 
  # >-**----*---**----*----*---**--****--**--
  # >*--*--**--*--*--**---**--*--*----*-*--*-
  # >*--*---*--*--*---*----*---***---*--*--*-
  # >*--*---*--*--*---*----*-----*--*---*--*-
  # >-**---***--**---***--***--**---*----**--
  # >----------------------------------------
  # 
  # >***--****---*---**--***---**----*---**--***---**---*---
  # >---*----*--**--*--*----*-*--*--**--*--*----*-*--*-*--*-
  # >-**----*----*---**---**---**----*---**---**---**--****-
  # >*-----*-----*--*--*-*----*--*---*--*--*-*----*--*----*-
  # >****--*----***--**--****--**---***--**--****--**-----*-
  # >-------------------------------------------------------
  # 
  # >-*----**----*--****---*---**--***--***---*---***--
  # >*--*-*--*--**--*-----**--*-------*----*-*--*----*-
  # >****--**----*--***----*--***---**---**--****--**--
  # >---*-*--*---*-----*---*--*--*-*-------*----*-*----
  # >---*--**---***-***---***--**--****-***-----*-****-
  # >--------------------------------------------------  
  
  describe '#initialize' do
    it 'should return correct test outputs given test input' do
      BigDigits.new('../test_input.txt')
      expect($stdout.string).to match('***----*---*-----*--****--**--***---**--')
      expect($stdout.string).to match('---*--**--*--*--**--*----*--*----*-*----')
      expect($stdout.string).to match('-**----*--****---*--***---***--**--***--')
      expect($stdout.string).to match('---*---*-----*---*-----*----*-*----*--*-')
      expect($stdout.string).to match('***---***----*--***-***---**--****--**--')
      expect($stdout.string).to match('----------------------------------------')
    end
  end
end
